version: '3.8'
services:
  app:
    image: maxisme/notifi-backend:latest
    env_file:
      - ".env"
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.notifibackend.rule=Host(`s.notifi.it`) || (Host(`notifi.it`) && Path(`/api`))"
        - "traefik.http.routers.notifibackend.entrypoints=web-secure"
        - "traefik.http.routers.notifibackend.tls.certresolver=letsencrypt"
        - "traefik.http.services.notifibackend.loadbalancer.server.port=8080"
    networks:
      - traefik
      - db

  dev:
    image: maxisme/notifi-backend:latest
    env_file:
      - ".env"
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.notifibackend.rule=Host(`s.notifi.it`) || (Host(`notifi.it`) && Path(`/api`))"
        - "traefik.http.routers.notifibackend.entrypoints=web-secure"
        - "traefik.http.routers.notifibackend.tls.certresolver=letsencrypt"
        - "traefik.http.services.notifibackend.loadbalancer.server.port=8080"
    networks:
      - traefik
      - db

  migrate:
    image: migrate/migrate
    networks:
      - db
    volumes:
      - ./sql:/sql
    command: ["-path", "/sql", "-database", "mysql://${db}", "up"]
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: none

networks:
  traefik:
    external: true
  db:
    external: true