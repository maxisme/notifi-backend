name: notifi
on: [push]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: src

#  test:
#    name: Test
#    needs: lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Run tests
#        run: docker-compose up --abort-on-container-exit test
#
#      - uses: codecov/codecov-action@v1
#        with:
#          directory: ./src/
#          root_dir: ./src/
#          token: ${{ secrets.CODECOV_TOKEN }}
#          fail_ci_if_error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          tag="$ECR_REGISTRY/notifi:${{ github.sha }}"
          if [[ "${{ github.ref }}" != "refs/heads/master" ]]
          then
            tag="$ECR_REGISTRY/notifi:latest"
          fi
          docker build --build-arg=COMMIT_HASH=${GITHUB_SHA::7} -t $tag .
          docker push $tag

#  deploy:
#    name: Deploy
#    needs: build
#    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: azure/setup-helm@v1
#      - uses: actions/checkout@master
#        with:
#          fetch-depth: '0'
#      - name: Upgrade helm
#        run: |
#          # TODO
