name: notifi
on: [push]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: src

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Run tests
        run: docker-compose up test

      - uses: codecov/codecov-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          file: ./coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set Docker Tags
        id: prep
        run: |
          TAGS="${{ github.repository }}:sha-${GITHUB_SHA::7}"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          platforms: linux/amd64,linux/arm/v7
          build-args: |
            COMMIT_HASH=${{ github.sha }}
  deploy:
    name: Deploy
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: azure/setup-helm@v1
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: Upgrade helm
        run: |
          # pull infra charts
          helm repo add maxisme https://${{ secrets.GH_PA_TOKEN }}@raw.githubusercontent.com/maxisme/infra/master/k8s/charts/
          helm repo update

          # create kube config
          mkdir ~/.kube
          echo "${{ secrets.B64_KUBE_CONFIG }}" | base64 --decode > ~/.kube/config

          # deploy helm
          helm_path="helm-values.yml"
          name="notifi"
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]
          then
            name="notifi-dev"
            helm_path="dev-helm-values.yml"
          fi
          echo helm upgrade "$name" maxisme/web -f $helm_path --set="image.tag=sha-${GITHUB_SHA::7}" --atomic --timeout 120s
          helm upgrade "$name" maxisme/web -f $helm_path --set="image.tag=sha-${GITHUB_SHA::7}" --atomic --timeout 120s

          # clean up
          rm ~/.kube/config
