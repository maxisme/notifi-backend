name: notifi
on: [push]

jobs:
  test:
    name: Test with Go version -
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        go: ['1.12', '1.13', '1.14']

    steps:
      - uses: actions/checkout@v1

      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Run Tests
        env:
          encryption_key: "46wyK8kZeHziiPMMGpZsE0UF1xTmrWB2"
          db: "root:root@"
          dbsource: "root:root@/notifi"
          server_key: "46wyK8kZeHziiPMMGpZsE0UF1xTmrWB2"
          redis: "127.0.0.1:6379"
          redis_db: 1
        run: go test ./... -v -covermode=count -coverprofile=coverage.out

      - uses: codecov/codecov-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: Publish Docker image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: Publish to Docker Registry
        uses: docker/build-push-action@v1
        with:
          cache_froms:
          repository: ${{ github.repository }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_with_ref: true
          tag_with_sha: true
      - name: Update Swarm
        if: github.ref == 'refs/heads/master'
        run: |
          export sha="${{ github.sha }}"
          curl -f -X POST ${{ secrets.SWARM_HOOK }} \
          -H 'Content-Type: application/x-www-form-urlencoded' \
          -d 'service=notifi-backend_app' \
          -d "image=${{ github.repository }}" \
          -d "tag=sha-${sha:0:7}" \
          -d "token=${{ secrets.HOOK_TOKEN }}"
      - name: Update Swarm
        if: github.ref == 'refs/heads/develop'
        run: |
          export sha="${{ github.sha }}"
          curl -f -X POST ${{ secrets.SWARM_HOOK }} \
          -H 'Content-Type: application/x-www-form-urlencoded' \
          -d 'service=notifi-backend_dev' \
          -d "image=${{ github.repository }}" \
          -d "tag=sha-${sha:0:7}" \
          -d "token=${{ secrets.HOOK_TOKEN }}"
