version: '3.9'
services:
  db:
    image: postgres
    environment:
      POSTGRES_DB: notifi
      POSTGRES_USER: notifi
      POSTGRES_PASSWORD: notifi
    networks:
      - overlay
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'

  redis:
    image: redis
    networks:
      - overlay
    ports:
      - '6379:6379'

  app:
    build:
      context: .
    ports:
      - "9081:8080"
    environment:
      DATABASE_HOST: "db"
      DATABASE_USER: "notifi"
      DATABASE_PASS: "notifi"
      DATABASE_NAME: "notifi"
      DATABASE_SSL_DISABLE: "1"
      REDIS_HOST: "redis:6379"
      SERVER_KEY: "Hu2J7b7xA8MndeNS"
    networks:
      - overlay
    depends_on:
      - migrate
    links:
      - db
      - migrate
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notifi.rule=Host(`localhost`)"
      - "traefik.http.routers.notifi.entrypoints=web"
      - "traefik.http.services.notifi.loadbalancer.server.port=8080"

  test:
    image: golang:1.16
    volumes:
      - "./src:/app/"
    environment:
      DATABASE_HOST: "db"
      DATABASE_USER: "notifi"
      DATABASE_PASS: "notifi"
      DATABASE_NAME: "notifi"
      DATABASE_SSL_DISABLE: "1"
      REDIS_HOST: "redis:6379"
      SERVER_KEY: "u2J7b7xA8MndeNS"
      ENCRYPTION_KEY: "6bO9OFNEsqdz3Bl16bO9OFNEsqdz3Bl1"
    networks:
      - overlay
    depends_on:
      migrate:
        condition: service_started
      redis:
        condition: service_started
    command: sh -c "cd /app && go test ./... -race -v -covermode=atomic -coverprofile=coverage.out"

  traefik:
    image: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  migrate:
    build:
      context: .
    command:
      - "./app"
      - "migrate"
    environment:
      DATABASE_HOST: "db"
      DATABASE_USER: "notifi"
      DATABASE_PASS: "notifi"
      DATABASE_NAME: "notifi"
      DATABASE_SSL_DISABLE: "1"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - overlay

networks:
  overlay: