version: '3.2'
services:
  db:
    image: postgres
    environment:
      POSTGRES_DB: notifi
      POSTGRES_USER: notifi
      POSTGRES_PASSWORD: notifi
    networks:
      - overlay
    ports:
      - '5432:5432'

  redis:
    image: redis
    networks:
      - overlay
    ports:
      - '6379:6379'

  app:
    build:
      context: .
    env_file:
      - ".env"
    ports:
      - "9081:8080"
    environment:
      DB_HOST: "postgres://notifi:notifi@db:5432/notifi"
      REDIS_HOST: "redis:6379"
    networks:
      - overlay
    depends_on:
      - migrate
    links:
      - db
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notifi.rule=Host(`localhost`)"
      - "traefik.http.routers.notifi.entrypoints=web"
      - "traefik.http.services.notifi.loadbalancer.server.port=8080"

  traefik:
    image: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations/
    command: [ "-path", "/migrations/", "-database", "postgres://notifi:notifi@db:5432/notifi?sslmode=disable", "up" ]
    links:
      - db
    networks:
      - overlay

networks:
  overlay: